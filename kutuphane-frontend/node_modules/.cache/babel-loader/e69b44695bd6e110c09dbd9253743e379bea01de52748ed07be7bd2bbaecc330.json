{"ast":null,"code":"import axios from'axios';const api=axios.create({baseURL:'https://localhost:7238/api',// .NET Core Web API adresin burası olacak\nheaders:{'Content-Type':'application/json'}});export const fetchCategories=()=>api.get('/category');export const fetchBooks=()=>api.get('/book');// Book management endpoints\nexport const createBook=bookData=>api.post('/book',bookData);export const updateBook=(id,bookData)=>api.put(`/book/${id}`,bookData);export const deleteBook=id=>api.delete(`/book/${id}`);// Auth endpoints\nexport const registerUser=userData=>api.post('/auth/register',userData);export const registerPublisher=publisherData=>api.post('/auth/register-publisher',publisherData);export const loginUser=loginData=>api.post('/auth/login',loginData);// User management endpoints\nexport const getAllUsers=()=>api.get('/auth');export const getUserById=id=>api.get(`/auth/${id}`);export const getUserByUsername=username=>api.get(`/auth/username/${username}`);export const updateUser=(id,userData)=>api.put(`/auth/${id}`,userData);export const deleteUser=id=>api.delete(`/auth/${id}`);export const getUserCount=()=>api.get('/auth/count');export const getUsersByRole=role=>api.get(`/auth/role/${role}`);// Favorite book endpoints\nexport const getUserFavorites=userId=>api.get(`/favoritebook/user/${userId}`);export const addToFavorites=userData=>api.post('/favoritebook/add',userData);export const removeFromFavorites=userData=>api.delete('/favoritebook/remove',{data:userData});export const checkIfFavorite=(userId,bookId)=>api.get(`/favoritebook/check/${userId}/${bookId}`);// Borrow request endpoints\nexport const getAllBorrowRequests=()=>api.get('/borrowrequest');export const getUserBorrowRequests=userId=>api.get(`/borrowrequest/user/${userId}`);export const getPublisherBorrowRequests=publisherId=>api.get(`/borrowrequest/publisher/${publisherId}`);export const createBorrowRequest=requestData=>api.post('/borrowrequest',requestData);export const getBorrowRequestById=id=>api.get(`/borrowrequest/${id}`);export const updateBorrowRequestStatus=(id,statusData)=>api.put(`/borrowrequest/${id}/status`,statusData);export const deleteBorrowRequest=id=>api.delete(`/borrowrequest/${id}`);export default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","fetchCategories","get","fetchBooks","createBook","bookData","post","updateBook","id","put","deleteBook","delete","registerUser","userData","registerPublisher","publisherData","loginUser","loginData","getAllUsers","getUserById","getUserByUsername","username","updateUser","deleteUser","getUserCount","getUsersByRole","role","getUserFavorites","userId","addToFavorites","removeFromFavorites","data","checkIfFavorite","bookId","getAllBorrowRequests","getUserBorrowRequests","getPublisherBorrowRequests","publisherId","createBorrowRequest","requestData","getBorrowRequestById","updateBorrowRequestStatus","statusData","deleteBorrowRequest"],"sources":["C:/Users/Yusuf SEDAY/Desktop/KentYazilim/kutuphane-frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://localhost:7238/api', // .NET Core Web API adresin burası olacak\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const fetchCategories = () => api.get('/category');\nexport const fetchBooks = () => api.get('/book');\n\n// Book management endpoints\nexport const createBook = (bookData) => api.post('/book', bookData);\nexport const updateBook = (id, bookData) => api.put(`/book/${id}`, bookData);\nexport const deleteBook = (id) => api.delete(`/book/${id}`);\n\n// Auth endpoints\nexport const registerUser = (userData) => api.post('/auth/register', userData);\nexport const registerPublisher = (publisherData) => api.post('/auth/register-publisher', publisherData);\nexport const loginUser = (loginData) => api.post('/auth/login', loginData);\n\n// User management endpoints\nexport const getAllUsers = () => api.get('/auth');\nexport const getUserById = (id) => api.get(`/auth/${id}`);\nexport const getUserByUsername = (username) => api.get(`/auth/username/${username}`);\nexport const updateUser = (id, userData) => api.put(`/auth/${id}`, userData);\nexport const deleteUser = (id) => api.delete(`/auth/${id}`);\nexport const getUserCount = () => api.get('/auth/count');\nexport const getUsersByRole = (role) => api.get(`/auth/role/${role}`);\n\n// Favorite book endpoints\nexport const getUserFavorites = (userId) => api.get(`/favoritebook/user/${userId}`);\nexport const addToFavorites = (userData) => api.post('/favoritebook/add', userData);\nexport const removeFromFavorites = (userData) => api.delete('/favoritebook/remove', { data: userData });\nexport const checkIfFavorite = (userId, bookId) => api.get(`/favoritebook/check/${userId}/${bookId}`);\n\n// Borrow request endpoints\nexport const getAllBorrowRequests = () => api.get('/borrowrequest');\nexport const getUserBorrowRequests = (userId) => api.get(`/borrowrequest/user/${userId}`);\nexport const getPublisherBorrowRequests = (publisherId) => api.get(`/borrowrequest/publisher/${publisherId}`);\nexport const createBorrowRequest = (requestData) => api.post('/borrowrequest', requestData);\nexport const getBorrowRequestById = (id) => api.get(`/borrowrequest/${id}`);\nexport const updateBorrowRequestStatus = (id, statusData) => api.put(`/borrowrequest/${id}/status`, statusData);\nexport const deleteBorrowRequest = (id) => api.delete(`/borrowrequest/${id}`);\n\nexport default api; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACvBC,OAAO,CAAE,4BAA4B,CAAE;AACvCC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,eAAe,CAAGA,CAAA,GAAMJ,GAAG,CAACK,GAAG,CAAC,WAAW,CAAC,CACzD,MAAO,MAAM,CAAAC,UAAU,CAAGA,CAAA,GAAMN,GAAG,CAACK,GAAG,CAAC,OAAO,CAAC,CAEhD;AACA,MAAO,MAAM,CAAAE,UAAU,CAAIC,QAAQ,EAAKR,GAAG,CAACS,IAAI,CAAC,OAAO,CAAED,QAAQ,CAAC,CACnE,MAAO,MAAM,CAAAE,UAAU,CAAGA,CAACC,EAAE,CAAEH,QAAQ,GAAKR,GAAG,CAACY,GAAG,CAAC,SAASD,EAAE,EAAE,CAAEH,QAAQ,CAAC,CAC5E,MAAO,MAAM,CAAAK,UAAU,CAAIF,EAAE,EAAKX,GAAG,CAACc,MAAM,CAAC,SAASH,EAAE,EAAE,CAAC,CAE3D;AACA,MAAO,MAAM,CAAAI,YAAY,CAAIC,QAAQ,EAAKhB,GAAG,CAACS,IAAI,CAAC,gBAAgB,CAAEO,QAAQ,CAAC,CAC9E,MAAO,MAAM,CAAAC,iBAAiB,CAAIC,aAAa,EAAKlB,GAAG,CAACS,IAAI,CAAC,0BAA0B,CAAES,aAAa,CAAC,CACvG,MAAO,MAAM,CAAAC,SAAS,CAAIC,SAAS,EAAKpB,GAAG,CAACS,IAAI,CAAC,aAAa,CAAEW,SAAS,CAAC,CAE1E;AACA,MAAO,MAAM,CAAAC,WAAW,CAAGA,CAAA,GAAMrB,GAAG,CAACK,GAAG,CAAC,OAAO,CAAC,CACjD,MAAO,MAAM,CAAAiB,WAAW,CAAIX,EAAE,EAAKX,GAAG,CAACK,GAAG,CAAC,SAASM,EAAE,EAAE,CAAC,CACzD,MAAO,MAAM,CAAAY,iBAAiB,CAAIC,QAAQ,EAAKxB,GAAG,CAACK,GAAG,CAAC,kBAAkBmB,QAAQ,EAAE,CAAC,CACpF,MAAO,MAAM,CAAAC,UAAU,CAAGA,CAACd,EAAE,CAAEK,QAAQ,GAAKhB,GAAG,CAACY,GAAG,CAAC,SAASD,EAAE,EAAE,CAAEK,QAAQ,CAAC,CAC5E,MAAO,MAAM,CAAAU,UAAU,CAAIf,EAAE,EAAKX,GAAG,CAACc,MAAM,CAAC,SAASH,EAAE,EAAE,CAAC,CAC3D,MAAO,MAAM,CAAAgB,YAAY,CAAGA,CAAA,GAAM3B,GAAG,CAACK,GAAG,CAAC,aAAa,CAAC,CACxD,MAAO,MAAM,CAAAuB,cAAc,CAAIC,IAAI,EAAK7B,GAAG,CAACK,GAAG,CAAC,cAAcwB,IAAI,EAAE,CAAC,CAErE;AACA,MAAO,MAAM,CAAAC,gBAAgB,CAAIC,MAAM,EAAK/B,GAAG,CAACK,GAAG,CAAC,sBAAsB0B,MAAM,EAAE,CAAC,CACnF,MAAO,MAAM,CAAAC,cAAc,CAAIhB,QAAQ,EAAKhB,GAAG,CAACS,IAAI,CAAC,mBAAmB,CAAEO,QAAQ,CAAC,CACnF,MAAO,MAAM,CAAAiB,mBAAmB,CAAIjB,QAAQ,EAAKhB,GAAG,CAACc,MAAM,CAAC,sBAAsB,CAAE,CAAEoB,IAAI,CAAElB,QAAS,CAAC,CAAC,CACvG,MAAO,MAAM,CAAAmB,eAAe,CAAGA,CAACJ,MAAM,CAAEK,MAAM,GAAKpC,GAAG,CAACK,GAAG,CAAC,uBAAuB0B,MAAM,IAAIK,MAAM,EAAE,CAAC,CAErG;AACA,MAAO,MAAM,CAAAC,oBAAoB,CAAGA,CAAA,GAAMrC,GAAG,CAACK,GAAG,CAAC,gBAAgB,CAAC,CACnE,MAAO,MAAM,CAAAiC,qBAAqB,CAAIP,MAAM,EAAK/B,GAAG,CAACK,GAAG,CAAC,uBAAuB0B,MAAM,EAAE,CAAC,CACzF,MAAO,MAAM,CAAAQ,0BAA0B,CAAIC,WAAW,EAAKxC,GAAG,CAACK,GAAG,CAAC,4BAA4BmC,WAAW,EAAE,CAAC,CAC7G,MAAO,MAAM,CAAAC,mBAAmB,CAAIC,WAAW,EAAK1C,GAAG,CAACS,IAAI,CAAC,gBAAgB,CAAEiC,WAAW,CAAC,CAC3F,MAAO,MAAM,CAAAC,oBAAoB,CAAIhC,EAAE,EAAKX,GAAG,CAACK,GAAG,CAAC,kBAAkBM,EAAE,EAAE,CAAC,CAC3E,MAAO,MAAM,CAAAiC,yBAAyB,CAAGA,CAACjC,EAAE,CAAEkC,UAAU,GAAK7C,GAAG,CAACY,GAAG,CAAC,kBAAkBD,EAAE,SAAS,CAAEkC,UAAU,CAAC,CAC/G,MAAO,MAAM,CAAAC,mBAAmB,CAAInC,EAAE,EAAKX,GAAG,CAACc,MAAM,CAAC,kBAAkBH,EAAE,EAAE,CAAC,CAE7E,cAAe,CAAAX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}