{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'https://localhost:7238/api',\n  // .NET Core Web API adresin burası olacak\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const fetchCategories = () => api.get('/category');\nexport const fetchBooks = () => api.get('/book');\n\n// Book management endpoints\nexport const createBook = bookData => api.post('/book', bookData);\nexport const updateBook = (id, bookData) => api.put(`/book/${id}`, bookData);\nexport const deleteBook = id => api.delete(`/book/${id}`);\n\n// Auth endpoints\nexport const registerUser = userData => api.post('/auth/register', userData);\nexport const registerPublisher = publisherData => api.post('/auth/register-publisher', publisherData);\nexport const loginUser = loginData => api.post('/auth/login', loginData);\n\n// User management endpoints\nexport const getAllUsers = () => api.get('/auth');\nexport const getUserById = id => api.get(`/auth/${id}`);\nexport const getUserByUsername = username => api.get(`/auth/username/${username}`);\nexport const updateUser = (id, userData) => api.put(`/auth/${id}`, userData);\nexport const deleteUser = id => api.delete(`/auth/${id}`);\nexport const getUserCount = () => api.get('/auth/count');\nexport const getUsersByRole = role => api.get(`/auth/role/${role}`);\n\n// Favorite book endpoints\nexport const getUserFavorites = userId => api.get(`/favoritebook/user/${userId}`);\nexport const addToFavorites = userData => api.post('/favoritebook/add', userData);\nexport const removeFromFavorites = userData => api.delete('/favoritebook/remove', {\n  data: userData\n});\nexport const checkIfFavorite = (userId, bookId) => api.get(`/favoritebook/check/${userId}/${bookId}`);\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","fetchCategories","get","fetchBooks","createBook","bookData","post","updateBook","id","put","deleteBook","delete","registerUser","userData","registerPublisher","publisherData","loginUser","loginData","getAllUsers","getUserById","getUserByUsername","username","updateUser","deleteUser","getUserCount","getUsersByRole","role","getUserFavorites","userId","addToFavorites","removeFromFavorites","data","checkIfFavorite","bookId"],"sources":["C:/Users/Yusuf SEDAY/Desktop/KentYazilim/kutuphane-frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://localhost:7238/api', // .NET Core Web API adresin burası olacak\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport const fetchCategories = () => api.get('/category');\r\nexport const fetchBooks = () => api.get('/book');\r\n\r\n// Book management endpoints\r\nexport const createBook = (bookData) => api.post('/book', bookData);\r\nexport const updateBook = (id, bookData) => api.put(`/book/${id}`, bookData);\r\nexport const deleteBook = (id) => api.delete(`/book/${id}`);\r\n\r\n// Auth endpoints\r\nexport const registerUser = (userData) => api.post('/auth/register', userData);\r\nexport const registerPublisher = (publisherData) => api.post('/auth/register-publisher', publisherData);\r\nexport const loginUser = (loginData) => api.post('/auth/login', loginData);\r\n\r\n// User management endpoints\r\nexport const getAllUsers = () => api.get('/auth');\r\nexport const getUserById = (id) => api.get(`/auth/${id}`);\r\nexport const getUserByUsername = (username) => api.get(`/auth/username/${username}`);\r\nexport const updateUser = (id, userData) => api.put(`/auth/${id}`, userData);\r\nexport const deleteUser = (id) => api.delete(`/auth/${id}`);\r\nexport const getUserCount = () => api.get('/auth/count');\r\nexport const getUsersByRole = (role) => api.get(`/auth/role/${role}`);\r\n\r\n// Favorite book endpoints\r\nexport const getUserFavorites = (userId) => api.get(`/favoritebook/user/${userId}`);\r\nexport const addToFavorites = (userData) => api.post('/favoritebook/add', userData);\r\nexport const removeFromFavorites = (userData) => api.delete('/favoritebook/remove', { data: userData });\r\nexport const checkIfFavorite = (userId, bookId) => api.get(`/favoritebook/check/${userId}/${bookId}`);\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,4BAA4B;EAAE;EACvCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAMJ,GAAG,CAACK,GAAG,CAAC,WAAW,CAAC;AACzD,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAMN,GAAG,CAACK,GAAG,CAAC,OAAO,CAAC;;AAEhD;AACA,OAAO,MAAME,UAAU,GAAIC,QAAQ,IAAKR,GAAG,CAACS,IAAI,CAAC,OAAO,EAAED,QAAQ,CAAC;AACnE,OAAO,MAAME,UAAU,GAAGA,CAACC,EAAE,EAAEH,QAAQ,KAAKR,GAAG,CAACY,GAAG,CAAC,SAASD,EAAE,EAAE,EAAEH,QAAQ,CAAC;AAC5E,OAAO,MAAMK,UAAU,GAAIF,EAAE,IAAKX,GAAG,CAACc,MAAM,CAAC,SAASH,EAAE,EAAE,CAAC;;AAE3D;AACA,OAAO,MAAMI,YAAY,GAAIC,QAAQ,IAAKhB,GAAG,CAACS,IAAI,CAAC,gBAAgB,EAAEO,QAAQ,CAAC;AAC9E,OAAO,MAAMC,iBAAiB,GAAIC,aAAa,IAAKlB,GAAG,CAACS,IAAI,CAAC,0BAA0B,EAAES,aAAa,CAAC;AACvG,OAAO,MAAMC,SAAS,GAAIC,SAAS,IAAKpB,GAAG,CAACS,IAAI,CAAC,aAAa,EAAEW,SAAS,CAAC;;AAE1E;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAMrB,GAAG,CAACK,GAAG,CAAC,OAAO,CAAC;AACjD,OAAO,MAAMiB,WAAW,GAAIX,EAAE,IAAKX,GAAG,CAACK,GAAG,CAAC,SAASM,EAAE,EAAE,CAAC;AACzD,OAAO,MAAMY,iBAAiB,GAAIC,QAAQ,IAAKxB,GAAG,CAACK,GAAG,CAAC,kBAAkBmB,QAAQ,EAAE,CAAC;AACpF,OAAO,MAAMC,UAAU,GAAGA,CAACd,EAAE,EAAEK,QAAQ,KAAKhB,GAAG,CAACY,GAAG,CAAC,SAASD,EAAE,EAAE,EAAEK,QAAQ,CAAC;AAC5E,OAAO,MAAMU,UAAU,GAAIf,EAAE,IAAKX,GAAG,CAACc,MAAM,CAAC,SAASH,EAAE,EAAE,CAAC;AAC3D,OAAO,MAAMgB,YAAY,GAAGA,CAAA,KAAM3B,GAAG,CAACK,GAAG,CAAC,aAAa,CAAC;AACxD,OAAO,MAAMuB,cAAc,GAAIC,IAAI,IAAK7B,GAAG,CAACK,GAAG,CAAC,cAAcwB,IAAI,EAAE,CAAC;;AAErE;AACA,OAAO,MAAMC,gBAAgB,GAAIC,MAAM,IAAK/B,GAAG,CAACK,GAAG,CAAC,sBAAsB0B,MAAM,EAAE,CAAC;AACnF,OAAO,MAAMC,cAAc,GAAIhB,QAAQ,IAAKhB,GAAG,CAACS,IAAI,CAAC,mBAAmB,EAAEO,QAAQ,CAAC;AACnF,OAAO,MAAMiB,mBAAmB,GAAIjB,QAAQ,IAAKhB,GAAG,CAACc,MAAM,CAAC,sBAAsB,EAAE;EAAEoB,IAAI,EAAElB;AAAS,CAAC,CAAC;AACvG,OAAO,MAAMmB,eAAe,GAAGA,CAACJ,MAAM,EAAEK,MAAM,KAAKpC,GAAG,CAACK,GAAG,CAAC,uBAAuB0B,MAAM,IAAIK,MAAM,EAAE,CAAC;AAErG,eAAepC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}